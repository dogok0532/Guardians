

*텍스트 출력 클래스를 다시 만들어서 필요할때 선언하는 식으로(GameObject가 자체적으로 출력하는식)
구현할것: 기존: MainGame->GetInstance-> DrawText.....
		  
		  
		  개선후: pText->DrawText.....  -> 완료!


*파싱 작업 완료할것

--> 이미지 파일 파싱작업 완료! tinyXml은 ascii 기반이라 한글이 깨져서 나온다. 유니코드로 변환해서
출력되게 수정할것   ...-> 완료?

-->XML파일 세부 리소스 수치 조정
-->BackGround 이슈 : 24비트형 png일때 검정색으로 출력됨. 그림판에 들어가서 저장버튼 누르면
32비트로 자동변환되니 참고  ->성용이한테 맡김






--> 몬스터 생성파싱작업 할것


*기존에 있던 Render()함수를 새로 만든 Draw함수로 교체/리팩토링 할것
-> 대체제 Draw함수 자체는 완벽하게 작동.
-> Render()함수를 모두 Draw()함수로 교체-> 완료!
이제 GameObject에서 Draw함수로 원하는 스프라이트를 그리고
가상함수 Render함수를 통해 각각 하위객체들이 사용





*Texture 과 GameObject간 의존관계를 어떻게 할것이냐... -> 일단 스프라이트 리소스에서 이름으로 통합관리







*싱글턴은 가급적이면 MainGame, Graphic Driver 로만 구현할것



아이템/적 출현 파싱 작업 완료.
충돌처리범위 설정-> 파싱? 하드코딩?


->배경과 배경을 따르는 적 이동구현(전차,대공포 등)
->파워업,스코어,라이프 아이템구현
->적의 이동패턴 알고리즘 구현
->


*옵저버 패턴으로 버튼을 구현할것
*옵저버 패턴으로 플레이어/적이 발사가 실행될때마다 전달?
*팩토리로 몬스터를 구현하는 방식으로 만들것
*데코레이터 패턴을 응용해서 몹에 새로운 속성을 부여할것
하나의 Player/Enemy 에 여러가지 속성부여?
아니면 기존대로 상속받아서 따로따로 선언?

*전체화면 지원 추가할것(DirectX)
